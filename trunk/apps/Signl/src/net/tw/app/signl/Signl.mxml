<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   applicationComplete="updateClass()"
			   pageTitle="Signl — Custom AS3 Signal File Generator — TOKI WOKI.">
	
	<fx:Style source="style/main.css"/>
	
	<fx:Declarations>
		<s:ArrayList id="alValueClasses" collectionChange="updateClass()" />
		<fx:String id="classTemplate"><![CDATA[package [PACKAGE] {
	[IMPORTS]
	public class [CLASS_NAME] extends [SUPER_CLASS] {
		public function [CLASS_NAME]([CONSTRUCTOR_ARGS]) {
			super([SUPER_CALL_ARGS]);
		}[DISPATCH_VALUES_METHOD]
	}
}]]></fx:String>
		<fx:String id="dispatchValuesTemplate"><![CDATA[
		public function dispatchValues([DISPATCH_VALUES_ARGS]):void {
			dispatch([DISPATCH_VALUES]);	
		}]]></fx:String>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			protected var signalClassName:String;
			protected function getClassContent():String {
				var s:String=classTemplate;
				var i:int;
				var item:Object;
				
				var cp:Array=tiPackageClass.text.split('.');
				signalClassName='';
				var classPackage:String='';
				if (cp.length>1) {
					signalClassName=cp.pop();
					classPackage=cp.join('.');
				}
				var superClass:String=superClassDD.selectedItem.type;
				var superClassName:String=superClass.split('.').pop();
				
				s=s.split('[CLASS_NAME]').join(signalClassName);
				s=s.replace('[PACKAGE]', classPackage);
				s=s.replace('[SUPER_CLASS]', superClassName);

				var imports:Array=['import '+superClass+';'];
				var superCallArgs:Array=[];
				
				var constructorArgs:String='';
				if (superClassName=='DeluxeSignal') {
					constructorArgs='target:Object=null';
					superCallArgs.push('target');
				}
				s=s.replace('[CONSTRUCTOR_ARGS]', constructorArgs);
				
				var type:String;
				var dispatchValuesArgs:Array=[];
				var dispatchValuesParams:Array=[];
				
				for (i=0; i<alValueClasses.length; i++) {
					item=alValueClasses.getItemAt(i);
					type=item.type;
					if (type.indexOf('.')>-1) {
						var arType:Array=type.split('.');
						type=arType[arType.length-1];
						var importStr:String='import '+item.type+';';
						if (imports.indexOf(importStr)==-1) imports.push(importStr);
					}
					superCallArgs.push(type);
					
					dispatchValuesArgs.push('p'+(i+1)+':'+type);
					dispatchValuesParams.push('p'+(i+1));
				}
				
				s=s.replace('[IMPORTS]', imports.join('\n\t'));
				s=s.replace('[SUPER_CALL_ARGS]', superCallArgs.join(', '));
				
				trace(cbDispatchMethod.selected, dispatchValuesArgs);
				if (!cbDispatchMethod.selected || dispatchValuesArgs.length==0) {
					s=s.replace('[DISPATCH_VALUES_METHOD]', '');
				} else {
					var dispatchValueMethod:String=dispatchValuesTemplate;
					dispatchValueMethod=dispatchValueMethod.replace('[DISPATCH_VALUES_ARGS]', dispatchValuesArgs.join(', '));
					dispatchValueMethod=dispatchValueMethod.replace('[DISPATCH_VALUES]', dispatchValuesParams.join(', '));
					s=s.replace('[DISPATCH_VALUES_METHOD]', dispatchValueMethod);
				}
				//
				return s;
			}
			protected function updateClass():void {
				callLater(function():void {
					taClass.text=getClassContent();
				});
			}
			protected function addValueClass():void {
				alValueClasses.addItem({type:'Object'});
				updateClass();
			}
			protected function saveAs():void {
				var fr:FileReference=new FileReference();
				fr.save(taClass.text, signalClassName+'.as');
			}
		]]>
	</fx:Script>
	
	<mx:HDividedBox left="10" right="10" top="10" bottom="10">
		<s:VGroup height="100%" width="30%">
			<s:Label text="Signal Package and Name" fontWeight="bold"/>
			<s:TextInput width="100%" text="signals.MyCustomSignal" id="tiPackageClass" change="updateClass()"/>
			<s:Label fontWeight="bold" text="Super Class"/>
			<s:DropDownList id="superClassDD" width="100%" requireSelection="true" change="updateClass()">
				<s:dataProvider>
					<s:ArrayCollection>
						<fx:Object label="Signal" type="org.osflash.signals.Signal" />
						<fx:Object label="DeluxeSignal" type="org.osflash.signals.DeluxeSignal" />
						<fx:Object label="PrioritySignal" type="org.osflash.signals.PrioritySignal" />
						<fx:Object label="SingleSignal" type="org.osflash.signals.SingleSignal" />
						<!--<fx:Object label="NativeSignal" type="org.osflash.signals.natives.NativeSignal" />
						<fx:Object label="NativeRelaySignal" type="org.osflash.signals.natives.NativeRelaySignal" />
						<fx:Object label="NativeMappedSignal" type="org.osflash.signals.natives.NativeMappedSignal" />-->
					</s:ArrayCollection>
				</s:dataProvider>
			</s:DropDownList>
			<s:CheckBox id="cbDispatchMethod" width="100%"
						label="Add dispatchValues method"
						selected="true" change="updateClass()"/>
			<s:Label text="Value Classes" fontWeight="bold"/>
			<mx:DataGrid height="100%" width="100%" id="dgValueClasses"
						 dataProvider="{alValueClasses}"
						 editable="true"
						 sortableColumns="false" draggableColumns="false"
						 dragEnabled="true" dragMoveEnabled="true" dropEnabled="true">
				<mx:columns>
					<mx:DataGridColumn headerText="Type" dataField="type"/>
				</mx:columns>
			</mx:DataGrid>
			<s:HGroup width="100%">
				<s:Button label="+" click="addValueClass()" />
				<s:Button label="-" enabled="{dgValueClasses.selectedItem}" click="alValueClasses.removeItemAt(dgValueClasses.selectedIndex)" />
			</s:HGroup>
		</s:VGroup>
		<s:VGroup width="70%" height="100%">
			<s:TextArea width="100%" height="100%" id="taClass"/>
			<s:HGroup horizontalAlign="right" width="100%" verticalAlign="middle">
				<s:Label text="Signl — Custom AS3 Signal File Generator — TOKI WOKI." color="#848484" paddingTop="2" />
				<s:Button label="Copy to Clipboard" click="System.setClipboard(taClass.text)" />
				<s:Button label="Save As..." click="saveAs()" />
			</s:HGroup>
		</s:VGroup>
	</mx:HDividedBox>
	
</s:Application>